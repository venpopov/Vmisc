% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/packages.R
\name{pkg_vload}
\alias{pkg_vload}
\title{Load and/or install packages with specific versions}
\usage{
pkg_vload(
  ...,
  reload = FALSE,
  path = .libPaths(),
  repos = getOption("repos"),
  install_args = NULL
)
}
\arguments{
\item{...}{One or more calls to the package name with version (if desired).
The calls should be of the form \code{pkg('version')} where \code{pkg} is the package
name and \code{version} is the version number. If the version is not specified,
the function will check for the default version of the package.}

\item{reload}{Logical. If \code{TRUE}, the function will attempt to unload the
package and load it again, regardless of whether the version is the same as
the one specified in the call. Default is \code{FALSE}. If the package is
already loaded, it will be reloaded even if reload is \code{FALSE}, if the
specified version is different from the one currently loaded.}

\item{path}{A character vector of paths to search for the package. Default is
the default library paths.}

\item{repos}{A character vector of repository URLs to use for installing the
package. Default is the value of \code{getOption("repos")}.}

\item{install_args}{A list of additional arguments to be passed to
\code{install.packages()} or \code{remotes::install_version()}. Default is \code{NULL}.}
}
\value{
This function does not return a value. Instead, it will stop the
execution and display a message if the requirements are not met.
}
\description{
pkg_vload() attempts to load a package and, if it is not available, installs
it. It can also install a specific version of a package. If the package is
already installed, it will check if the version is the same as the one
specified in the call. If the version is different, it will attempt to unload
the package and install the specified version in a separate library, allowing
the user to have multiple versions of the same package installed at the same
time.
}
\examples{
\dontrun{
# Load the 'brms' package and install version 2.0.0 if it is not available
pkg_vload(brms("2.0.0"))

# Load multiple packages and install specific versions if they are not available
pkg_vload(brms("2.0.0"), utils)
}
}
