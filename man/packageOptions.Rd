% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/packages.R
\name{packageOptions}
\alias{packageOptions}
\title{View the current or default global options for a package}
\usage{
packageOptions(pkg, own_only = FALSE, max_length = 50, show_defaults = FALSE)
}
\arguments{
\item{pkg}{Name of the package to extract options from}

\item{own_only}{Logical. If \code{TRUE}, only options defined by the package
itself will be returned. These are defined as options whose name starts
with the package name, followed by a dot. E.g.
\code{getOption("knitr.device.fallback")}. If \code{FALSE}, all options will be
returned. Default is \code{FALSE}.}

\item{max_length}{Integer. Controls the maximum length of individual the
default values to be printed. You will rarely need to change this. However,
if your results include strange output with very long strings defining
default values via internal functions, you can decrease this value to
suppress them. Default is 50.}

\item{show_defaults}{Logical. If \code{TRUE}, the default values of the options
will be printed as well. Default is \code{FALSE}.}
}
\value{
A named list of the current values of the options. This list can be
saved to a variable and used with option() to restore the options to these
values at a later time should you change them.
}
\description{
\code{\link[=packageOptions]{packageOptions()}} scrapes the source code of a package to find all calls to
\code{getOption()} and returns a tidied list of the current values of the options.
Initial running time might be slow if a package contains a large amount of
code. Repeated calls to the function will be significantly faster.
}
\examples{
packageOptions("utils")
}
